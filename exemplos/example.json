Introdução:
//A documentação completa da API escrita com os detalhes aqui


Autenticação:
//Todos os endPoints são necessários o token JWT no header para liberar o acesso, abaixo segue o exemplo de como tem que ser informado:
header:{
    "Authorization": "Bearer <token>"
}
// O '<token' é trocado pelo token gerado no Login ou Cadastro
// Existem exceções que permitem o acesso sem o token:
// Criar ou logar um usuário
// Esqueci a senha

EndPoints:

// Para cadastrar um novo acorde ao banco
CHORD
{
    "chordName": "Dó",
    "chordImagelink": "www.image.com/chord_do",
    "chordSoundLink": "www.sound.com/chord_do"
}
//Para adicionar uma nova opção do tanto de experiência que o usuário tem
EXPERIENCE
{
    "expretienceOption": "Pouca experiência"
}
//Para cadastrar um novo gênero musical
GENRES
{
    "genreName": "Eletrônica"
}
//Para adicionar uma nova opção de instrumento para o usuário escolher
INSTRUMENT
{
    "instrumentOption": "Flauta",
    "instrumentImageLink": "www.image.com/instrument_flaut",
    "instrumentImageHover": "www.image.com/instrument_flaut_hover"
}
//Para adicionar uma nova opção sobre o que o usuário quer aprender
LEARN
{
    "learnOption": "Tocar nas estações"
}
//Para cadastrar uma nova lição
LESSONS
{
    "lessonName": "Flauta 1",
    "lessonImageLink": "www.image.com/lesson_flaut"
}
//Para adicionar uma nova opção para o usuário escolher o tanto de tempo de prática que ele terá disponivel
PRACTICE
{
    "practiceOption": "4 horas por dia"
}
//Para cadastrar as questões que cada lição terá
//2 observações são nos campos "questionTemplate" e "isExplanation"
// "questionTemplate": o template que a questão terá, cada página é personalizada então o template é uma string para definir como será o estilo da visualização, por conta disso, o banco permite o envio de informações 'null', já que não seriam necessárias
// "isExplanation": quando a questão é uma explicação/introdução ela garante que não precisará informar nenhuma outra tabela de relação (como as de acordes e sons) (0 = não, 1 = sim)
QUESTIONS
{
    "questionTitle": "Como tocar flauta",
    "questionImageLink": null,
    "questionContent": null,
    "questionOption": null,
    "questionOptionCorrect": null,
    "questionTemplate": "template_flaut_1",
    "isExplanation": 1,
    "lessonsId": 1
}
//Para cadastrar uma nova música ao banco
SONGS
{
    "songName": "BAP U - Party Favor",
    "songLink": "www.song.com/music_party$favor$bapU",
    "songContent": "You / You, You, You / You / You Bap U"
}
//Para adicionar um estilo musical de escolha para a preferência do usuário
STYLE
{
    "styleOption": "Eletrônica"
}
//Para cadastrar um novo usuário
USERS
{
    "userName": "Victor",
    "email": "victor@email.com",
    "password": "senhaforte"
}

USERS(LOGIN)
{
    "email": "victor@email.com",
    "password": "senhaforte"
}

USERS(ESQUECI A SENHA)
{
    "email": "victor@email.com"
}

USERS(RECUPERAR SENHA)
{
    "password": "senhaatualizada"
}

RELAÇÕES
//As relações entre os usuarios e outras tabelas é simples, servem para informar que o usuário aprendeu o acorde, lição ou música
//o ID do usuário fica na URL, enquanto as outras tabelas são informadas no body
//Para criar uma nova relação entre os usuários e os acordes que ele aprendeu 
USERS_CHORDS
{
    "chordsId": 1
}
//Para criar uma nova relação entre os usuários e as lições que ela completou
USERS_LESSONS
{
    "lessonsId": 1
}
//Para criar uma nova relação entre o usuário e as perguntas do Onboarding, é necessário para criar um sistema personalizado de ensino
USERS_QUESTIONS
{
    "instrumentId": 1,
    "experienceId": 3,
    "practiceId": 5,
    "styleId": 2,
    "learnId": 4
}
//Para criar uma nova relação entre os usuários e as musicas que ele aprendeu a tocar
USERS_SONGS
{
    "songsId": 1
}